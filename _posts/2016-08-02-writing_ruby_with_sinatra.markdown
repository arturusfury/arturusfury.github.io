---
layout: post
title:  "Writing Ruby with Sinatra"
date:   2016-08-02 14:08:11 +0000
---

So let's talk Sinatra. I think he's great and love blasting it sometimes. A little New York, New York or Fly Me to the Moon and I'm happy as can be. I'm sure that joke get's really old after a while, but with a name like Sinatra what do you expect to happen? No, this is about my latest assessment using Ruby and Sinatra to produce a web app with a database. For this assessment we needed to use Sinatra and ActiveRecord to generate an application that contained different users and information that belonged to each user.

It took me a while to figure out what I wanted to do. Some ideas I had were far too elaborate and complex for what I was needing to do. Complex and Elaborate are not bad things, however there needed to be a good return on my time invested at this point. So I had to cross some ideas off for now or just placing them into my "side projects" stack of ideas and then I had to brainstorm some more. In the end I went with a Pokemon Collection app for PokemonGo. It's such a huge thing right now and I had caught the bug a little I figured why not? That's an answer I use a lot for thingsin, why not?  Why shouldn't I build an app to show a user's collected pokemon in PokemonGo, even if it doesn't directly tie into the app itself and requires the user to manually enter the Pokemon into the database. It's still a fun little project.

With that I set off and immediately screwed up. Now I didn't know it at the time, it took me far too long to realise my mistake. I started by creating my repo and folder structure and generating some blank files. I had to try a few different things before I was happy with my file struture and file naming conventions. After that I started to generate a mockup of the layout I wanted using bootstrap. Now here is where things took a far different route then they should have.

I spent the whole first half of my last assessment blog post talking about testing, after all we are doing TDD right? Yea ... turns out I skipped that step. Whoops! So now here I am saying I'm sorry for railing against not doing TDD. I turned into a giant hypocrite and skipped the TDD step without even realising it. I'm sitting here trying to mock up my site and during this whole process I'm adding little bits of code here and there so I can see how everything is going to look. I start playing around with different box sizes and column structures. Well then I needed data to fill those, so we'll just add a little bit here and look there it is! What about my user page? Crap now I need to add just a little more data and then I will get started on my development.

Like that over and over again I went writing all of my code for my "mockup" page, when it turns out that was all of the code I would need for my final project page! Crap! So I noticed my mistake after I had completed a good 75% of my application. At least I didn't completely finish it and skip testing all together right? Unfortunately I ran into a whole different kind of trouble after that. Writing tests for my code that worked, and then making sure my tests actually passed. At this point I know my application is working, I've created accounts and logged in with different users. I've added Pokemon to a user's collection.  I've changed existing Pokemon stats and even deleted them from the collection. It works as intended, but now tests! Crap.

So I spent almost half again as much time writing some tests that would explain my code and still pass. What a pain! Now that the project is done (yes, even the tests are done) I look back and know that I should've done things differently. I should've prepared better and had a timeline written out of exactly what I needed to be doing.

All of that aside, I really enjoyed working with Sinatra and ActiveRecord. It was nice being able to make something that could be accessable to anyone. Not that CLI programs aren't accessable to everyone, but which is easier to work with. Telling someone to type a command into a terminal or command prompt or just giving them a web browser link?

I'm excited to get into the "magic" of Rails next.  Sinatra was a good framework and I can see it being really useful for a lightweight application.  Onward and Upward!
